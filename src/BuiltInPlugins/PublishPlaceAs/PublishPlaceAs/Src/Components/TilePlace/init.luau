local l_Parent_0 = script.Parent.Parent.Parent;
local v1 = require(l_Parent_0.Packages.Roact);
local v2 = require(l_Parent_0.Packages.Framework);
local l_ContextServices_0 = v2.ContextServices;
local l_withContext_0 = l_ContextServices_0.withContext;
local l_UI_0 = v2.UI;
local l_Separator_0 = l_UI_0.Separator;
local l_TextLabel_0 = l_UI_0.TextLabel;
local l_RadioButton_0 = l_UI_0.RadioButton;
local l_LayoutOrderIterator_0 = v2.Util.LayoutOrderIterator;
local l_ContentProvider_0 = game:GetService("ContentProvider");
local v11 = v1.PureComponent:extend("TilePlace");
v11.init = function(v12) --[[ Line: 22 ]] --[[ Name: init ]]
    v12.state = {};
    v12.isMounted = false;
    if v12.props.Id then
        v12.thumbnailUrl = string.format("rbxthumb://type=AutoGeneratedAsset&id=%i&w=%i&h=%i", v12.props.Id, 150, 150);
    end;
end;
v11.didMount = function(v13) --[[ Line: 33 ]] --[[ Name: didMount ]]
    -- upvalues: l_ContentProvider_0 (copy)
    v13.isMounted = true;
    if v13.props.Id then
        spawn(function() --[[ Line: 36 ]]
            -- upvalues: v13 (copy), l_ContentProvider_0 (ref)
            local v14 = {
                v13.thumbnailUrl
            };
            l_ContentProvider_0:PreloadAsync(v14, function(_, v16) --[[ Line: 38 ]] --[[ Name: setStatus ]]
                -- upvalues: v13 (ref)
                if v13.isMounted then
                    v13:setState({
                        assetFetchStatus = v16
                    });
                end;
            end);
        end);
    end;
end;
v11.willUnmount = function(v17) --[[ Line: 50 ]] --[[ Name: willUnmount ]]
    v17.isMounted = false;
end;
v11.render = function(v18) --[[ Line: 54 ]] --[[ Name: render ]]
    -- upvalues: l_LayoutOrderIterator_0 (copy), v1 (copy), l_RadioButton_0 (copy), l_TextLabel_0 (copy), l_Separator_0 (copy)
    local l_props_0 = v18.props;
    local l_Stylizer_0 = l_props_0.Stylizer;
    local l_Name_0 = l_props_0.Name;
    local l_Selected_0 = l_props_0.Selected;
    assert(l_Selected_0 ~= nil);
    local _ = l_props_0.LastItem;
    local l_OnActivated_0 = l_props_0.OnActivated;
    local v25 = l_props_0.LayoutOrder or 0;
    local v26 = nil;
    local v27 = false;
    if l_props_0.Id then
        if v18.state.assetFetchStatus == Enum.AssetFetchStatus.Success then
            v27 = true;
            v26 = v18.thumbnailUrl;
        else
            v26 = l_Stylizer_0.icons.thumbnailPlaceHolder;
        end;
    end;
    local v28 = l_LayoutOrderIterator_0.new();
    return v1.createElement("ImageButton", {
        Size = UDim2.new(1, -40, 0, 80), 
        LayoutOrder = v25, 
        BackgroundTransparency = 1, 
        [v1.Event.Activated] = l_OnActivated_0
    }, {
        Tile = v1.createElement("Frame", {
            Size = UDim2.fromScale(1, 1), 
            BackgroundTransparency = 1
        }, {
            ListLayout = v1.createElement("UIListLayout", {
                FillDirection = Enum.FillDirection.Horizontal, 
                SortOrder = Enum.SortOrder.LayoutOrder, 
                Padding = UDim.new(0, 20), 
                VerticalAlignment = Enum.VerticalAlignment.Center
            }), 
            RadioButton = v1.createElement(l_RadioButton_0, {
                Selected = l_Selected_0, 
                Text = "", 
                OnClick = l_OnActivated_0, 
                LayoutOrder = v28:getNextOrder()
            }), 
            Icon = v26 and v1.createElement("ImageLabel", {
                Size = UDim2.new(0, 60, 0, 60), 
                Image = v26, 
                ImageColor3 = v27 and Color3.new(1, 1, 1) or l_Stylizer_0.icons.imageColor, 
                BackgroundColor3 = l_Stylizer_0.icons.backgroundColor, 
                BorderSizePixel = 0, 
                LayoutOrder = v28:getNextOrder()
            }) or nil, 
            Name = v1.createElement(l_TextLabel_0, {
                Text = l_Name_0, 
                TextWrapped = true, 
                TextXAlignment = Enum.TextXAlignment.Left, 
                LayoutOrder = v28:getNextOrder()
            })
        }), 
        Separator = v1.createElement(l_Separator_0, {
            Size = UDim2.fromScale(1, 0), 
            Position = UDim2.new(0.5, 0, 1, 0)
        })
    });
end;
return (l_withContext_0({
    Stylizer = l_ContextServices_0.Stylizer, 
    Localization = l_ContextServices_0.Localization
})(v11));